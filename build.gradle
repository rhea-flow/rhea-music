apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'maven'

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.github.rhea-flow"
version = 1.0

dependencies {

	// rhea-flow
	compile 'com.github.rhea-flow:rhea-core:-SNAPSHOT'
	compile 'com.github.rhea-flow:rx-eval:-SNAPSHOT'
	compile 'com.github.rhea-flow:scala-wrapper:-SNAPSHOT'

    // jMusic
    compile 'com.explodingart:jmusic:1.6.4.1'

	// Scala
  	compile 'org.scala-lang:scala-compiler:2.12.0-M3'
  	compile 'org.scala-lang:scala-library:2.12.0-M3'
	compile 'org.scala-lang.modules:scala-java8-compat_2.12.0-M5:0.8.0-RC3'

	testCompile 'junit:junit:4.11'
	testCompile 'com.github.rhea-flow:test-data:-SNAPSHOT'
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

test {
	testLogging {
		displayGranularity 3
		//events 'passed', 'failed', 'standard_out'
		//events 'passed', 'failed', 'standard_error'
		events 'passed', 'failed', 'standard_out', 'standard_error'
		exceptionFormat = 'full'
	}
}

if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}
